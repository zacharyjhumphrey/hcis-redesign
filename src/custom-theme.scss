// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$hcis-primary-palette: (
  50: #e0f2ed,
  100: #c5cae9,
  200: #81c9b3,
  300: #51b396,
  400: #2ea382,
  500: #12936f,
  600: #0f8663,
  700: #097655,
  800: #016648,
  900: #004a2e,
  contrast: (50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    // TODO Change me... but to what?
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

$hcis-redesign-primary: mat.define-palette($hcis-primary-palette);
$hcis-redesign-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$hcis-redesign-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$hcis-redesign-theme: mat.define-light-theme((color: (primary: $hcis-redesign-primary,
        accent: $hcis-redesign-accent,
        warn: $hcis-redesign-warn,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($hcis-redesign-theme);


html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}